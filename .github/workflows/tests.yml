name: Tests
on:
  push:
    branches:
      - main
      - release-*
    tags: '*'
  pull_request:
defaults:
  run:
    shell: bash
concurrency:
  # Skip intermediate builds: always.
  # Cancel intermediate builds: only if it is a pull request build.
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ startsWith(github.ref, 'refs/pull/') }}
jobs:
  Tests:
    name: Tests
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        version:
          - '1.6'
          - '1.7'
          - '1.8'
          - '1.9'
          - '1.10-nightly'
          - 'nightly'
        os:
          - ubuntu-latest
          - macOS-latest
          - windows-latest
        arch:
          - x64
    steps:
      - uses: actions/checkout@v2
      - uses: julia-actions/setup-julia@v1
        with:
          version: ${{ matrix.version }}
          arch: ${{ matrix.arch }}
      - uses: julia-actions/julia-buildpkg@v1
      - uses: julia-actions/julia-runtest@v1
        with:
          annotate: true
  #    - uses: julia-actions/julia-processcoverage@v1
  #    - uses: codecov/codecov-action@v1
  #      with:
  #        file: lcov.info
  # docs:
  #   name: Documentation
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: julia-actions/setup-julia@v1
  #       with:
  #         version: '1'
  #     - run: |
  #         julia --project=docs -e 'import Pkg; Pkg.develop(path=".")'
  #         julia --project=docs docs/make.jl
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #         DOCUMENTER_KEY: ${{ secrets.DOCUMENTER_KEY }}
  # doctests:
  #   name: Doctests
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: julia-actions/setup-julia@v1
  #       with:
  #         version: '1'
  #     - run: |
  #         julia --project=docs -e 'import Pkg; Pkg.develop(path=".")'
  #         julia --project=docs -e '
  #           using Documenter: doctest
  #           using ScopedVariables
  #           doctest(ScopedVariables; manual = true)'
